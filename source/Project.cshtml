@using System.Linq
@using System.Collections.Generic

@{
  var targetFrameworkMoniker = "MonoAndroid90";
}

<Project Sdk="MSBuild.Sdk.Extras/2.0.54">

  <PropertyGroup>
    <TargetFrameworks>@(targetFrameworkMoniker)</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    @if (!string.IsNullOrEmpty(Model.AssemblyName)) {
    <AssemblyName>@(Model.AssemblyName)</AssemblyName>
    } else {
    <AssemblyName>@(Model.NuGetPackageId)</AssemblyName>
    }
    <MonoAndroidResourcePrefix>Resources</MonoAndroidResourcePrefix>
    <MonoAndroidAssetsPrefix>Assets</MonoAndroidAssetsPrefix>
    <AndroidUseLatestPlatformSdk>False</AndroidUseLatestPlatformSdk>
    <AndroidUseIntermediateDesignerFile>True</AndroidUseIntermediateDesignerFile>
    <AndroidResgenFile>Resources\Resource.designer.cs</AndroidResgenFile>
    <EnableProguard>true</EnableProguard>
    <AndroidEnableMultiDex>true</AndroidEnableMultiDex>
    <AndroidUseAapt2>true</AndroidUseAapt2>
    <AndroidDexTool>d8</AndroidDexTool>
    <AndroidLinkTool>r8</AndroidLinkTool>
    <AndroidManifestMerger>manifestmerger.jar</AndroidManifestMerger>
  </PropertyGroup>

  @{
      string name_short = Model.NuGetPackageId.Replace("Naxam.", "");
      string key = Model.NuGetPackageId;
      string project_url = "https://github.com/NAXAM/mapbox-android-binding";
      string license_url = "https://github.com/NAXAM/mapbox-android-binding/blob/master/LICENSE";
      string icon_url = "https://avatars3.githubusercontent.com/u/3453";
      string c = Model.Name;
  }
  <PropertyGroup>
    <PackageId>@(Model.NuGetPackageId)</PackageId>
    <Title>Xamarin.Android Binding Library for Mapbox SDK -  @(name_short)</Title>
    <Summary>Xamarin.Android Binding Library for Mapbox SDK - @(name_short) @(Model.NuGetVersion)</Summary>
    <Description>
        Xamarin.Android Binding Library for Mapbox SDK - @(name_short) @(Model.NuGetVersion) 
    </Description>
    <PackageTags> Xamarin.Android Binding Library for Mapbox SDK </PackageTags>
    <Authors>NAXAM CO.,LTD</Authors>
    <Owners>NAXAM CO.,LTD</Owners>
    <Copyright>Â© Naxam Company Limited. All rights reserved.</Copyright>
    <PackageProjectUrl>@(project_url)</PackageProjectUrl>
    <PackageLicenseUrl>@(license_url)</PackageLicenseUrl>
    <PackageIconUrl>@(icon_url)</PackageIconUrl>
    <PackageVersion>@(Model.NuGetVersion)</PackageVersion>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <!-- Include symbol files (*.pdb) in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup>
    <AndroidClassParser>class-parse</AndroidClassParser>
    <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      =================================================================================================================
      Xamarin.Android Bindings specific warnings
    -->
    <!--
      Ignoreable
      Performance hit for builds
      - BG8A04: <attr path="XPath" /> matched no nodes.
      - BG8A00: <remove-node path="XPath" /> matched no nodes.  
    -->
    <NoWarn>08A04;BG8A00;CS0109;CS0108;CS0114</NoWarn>

    <!--
      Harmfull 
      - BG8401: Skipping managed_type, due to a duplicate field, method or nested type name. (Nested type) (Java type: java_type)  
      - BG8604: top ancestor Type1 not found for nested type Namespace.Type1.Type2
      - BG8C00: For type Namespace.Type1, base interface java.Interface does not exist
      - BG8700: Unknown return type java.Type1 in method Method1 in managed type Namespace.Type2.
      - BG8800: Unknown parameter type java.Type1 in method Method2 in managed type Namespace.Type2.
    -->
    <WarningsAsErrors>BG8401;BG8604;BG8C00;BG8700;BG8800</WarningsAsErrors>
    <!--
      Xamarin.Android specific warnings
      =================================================================================================================
    -->
  </PropertyGroup>

  <ItemGroup>
      @foreach (var art in @Model.MavenArtifacts) {
      <TransformFile Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.xml" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.xml')" />
      }
      <TransformFile Include="..\..\externals\paramnames.xml" Condition="Exists('..\..\externals\paramnames.xml')" />
  </ItemGroup>

  @*<ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
    <JavaSourceJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar')" />
    }   
  </ItemGroup>*@

  <ItemGroup>
    <_AndroidDocumentationPath Include="..\..\externals\paramnames.txt" Condition="Exists('..\..\externals\paramnames.txt')" />
    @foreach (var art in @Model.MavenArtifacts) {
    <_AndroidDocumentationPath Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.txt" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.txt')" />
    }
  </ItemGroup>

  <ItemGroup>
    <None Include="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="build\@(targetFrameworkMoniker)" />
  </ItemGroup>

  @if (@Model.MavenArtifacts.Count > 0) {
  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (art.ProguardFile != null) {
    <None Include="..\..\@(art.ProguardFile)" Pack="True" PackagePath="proguard\@(targetFrameworkMoniker)" />
      }
    }
  </ItemGroup>
  }

  <ItemGroup>
    <Folder Include="Additions\" />
    <Folder Include="Jars\" />
    <Folder Include="Transforms\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\source\AssemblyInfo.cs" />
    <Compile Include="..\..\source\@(Model.MavenGroupId)\@(Model.Name)\Additions\*.cs">
        <Link>Additions/%(RecursiveDir)/%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <TransformFile Include="..\..\source\@(Model.MavenGroupId)\@(Model.Name)\Transforms\*.xml">
        <Link>Transforms/%(RecursiveDir)/%(Filename)%(Extension)</Link>
    </TransformFile>
  </ItemGroup>

  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (1==2 && art.MavenArtifactPackaging == "aar") {
    <None Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" Pack="True" PackagePath="aar\@(targetFrameworkMoniker)" />
      }
    }
  </ItemGroup>

  @if (@Model.MavenArtifacts.Count > 0) {
  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (art.MavenArtifactPackaging == "aar") {
    <LibraryProjectZip Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" />
      } else {
    <EmbeddedJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" />
      }
    }
  </ItemGroup>
  }
  <ItemGroup>
    <!-- ProjectReference -->
  </ItemGroup>

  <ItemGroup>
    <!-- ProjectReference -->
    @foreach (var dep in @Model.NuGetDependencies) {
      if (Model.Name == "mapbox" && dep.MavenArtifact.MavenArtifactId == "google-payment") {
        continue;
      }

      if (dep.IsProjectReference) {
        <ProjectReference Include="..\..\generated\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId)\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId).csproj" PrivateAssets="none" />
      }
    }
    <!-- some additional fixes -->
  </ItemGroup>

  <ItemGroup>
    <!-- PackageReference -->
    @foreach (var dep in @Model.NuGetDependencies) {
      if (!dep.IsProjectReference) {
      <PackageReference Include="@(dep.NuGetPackageId)" Version="@(dep.NuGetVersion)" PrivateAssets="none" />
      }      
    }
    @if (@Model.Name == "djisdk"
    || @Model.Name=="google-payment"
    ) {
      <PackageReference Include="Xamarin.GooglePlayServices.Wallet" Version="71.1600.1" PrivateAssets="none" />
    }
    @if (@Model.Name == "browser-switch") {
      <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.1.0.9" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Appcompat" Version="1.2.0.7" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.Fragment" Version="1.3.0.1" PrivateAssets="none" />
    }
    @if (@Model.Name == "drop-in") {
      <PackageReference Include="Xamarin.AndroidX.CardView" Version="1.0.0.2" PrivateAssets="none" />
      <PackageReference Include="Xamarin.AndroidX.RecyclerView" Version="1.1.0.8" PrivateAssets="none" />
      <PackageReference Include="Xamarin.Google.Android.Material" Version="1.3.0.1" PrivateAssets="none" />
    }
    @if (@Model.Name=="google-payment"
    ) {
      <ProjectReference Include="..\..\generated\com.djisdkpayments.api.djisdk\com.djisdkpayments.api.djisdk.csproj" PrivateAssets="none" />
    }
    @if (@Model.Name=="drop-in"
    ) {
      <ProjectReference Include="..\..\generated\com.djisdkpayments.api.google-payment\com.djisdkpayments.api.google-payment.csproj" PrivateAssets="none" />
    }
  </ItemGroup>

  @*
  <!--
  NOTE: 
  Xamarin.Build.Download version set in GooglePlaySericesProjects.cshtml template is 
  important for attributes in GooglePlaySericesTargets.cshtml template
  
  XamarinBuildDownloadAndroidAarLibrary   v >=  0.10.0
  XamarinBuildDownloadRestoreAssemblyAar  v <   0.10.0
  -->
  *@
  <ItemGroup>
    <PackageReference Include="Xamarin.Build.Download" Version="0.10.0" />
  </ItemGroup>
  

</Project>
